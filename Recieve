if not game:IsLoaded() then
    repeat game.Loaded:Wait() until game:IsLoaded()
end
wait(10)

-- ================== CONFIG ==================
if not getgenv().Config then
getgenv().Config = {
    SelectUserNameTradePet = {
    "MrsAndrewkn0ll2005",
    "Emmajolt2012",
    "MrsGamerKnack2006",
    "NexusJill_Dancer"
}
}
end

PetsToTrade = getgenv().PetsToTrade
if not PetsToTrade then
   PetsToTrade = {"Cockatrice", "French","Golden Goose", "Lobster", "Red Fox","Dragonfly","Swan","Phoenix",}
end
-- ============================================

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local TAFSERVICE = {}

local function unequipCurrentTool()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hum = char:FindFirstChildOfClass("Humanoid")
    if hum then
        hum:UnequipTools()  -- moves equipped tool back to Backpack
    end
end

-- Find the first available target player from list/string
-- Returns the Player instance or nil if none found in this server
function TAFSERVICE.a()
    local sel = getgenv().Config.SelectUserNameTradePet
    local candidates = {}

    if type(sel) == "table" then
        candidates = sel
    elseif type(sel) == "string" and sel ~= "" then
        candidates = {sel}
    end

    for _, name in ipairs(candidates) do
        local p = Players:FindFirstChild(name)
        if p then
            return p
        end
    end
    return nil
end

function TAFSERVICE.b()
    unequipCurrentTool()
    local Backpack = LocalPlayer:FindFirstChild("Backpack")
    if not Backpack then return false end

    for _, PetName in ipairs(PetsToTrade) do
        for _, v in ipairs(Backpack:GetChildren()) do
            if v:IsA("Tool") and v.Name:find(PetName) then
                return v
            end
        end
    end
    return false
end

function TAFSERVICE.c(pos)
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if hrp then
        hrp.CFrame = CFrame.new(pos)
    end
end

function TAFSERVICE.c1(pet)
    if not (LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")) then
        return false
    end
    local Humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if not Humanoid then
        return false
    end

    local equippedTool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
    if equippedTool and not equippedTool.Name:find(tostring(pet)) then
        Humanoid:UnequipTools()
        wait(0.1)
    end

    local Backpack = LocalPlayer:FindFirstChild("Backpack")
    if not Backpack then return false end

    local PetTool = Backpack:FindFirstChild(tostring(pet))
    if Humanoid and PetTool then
        if PetTool:GetAttribute("d") == true then
            local args = { PetTool }
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("Favorite_Item"):FireServer(unpack(args))
        end
        Humanoid:EquipTool(PetTool)
        wait(0.1)
        return true
    end
    return false
end

function TAFSERVICE.d()
    local Pet = TAFSERVICE.b()
    local TargetPlayer = TAFSERVICE.a()

    if not TargetPlayer then
        print("No player found")
        return false
    end
    if not Pet then
        writefile(filename, "Yummytool")
        LocalPlayer:Kick("du pet r be iu di ra th")
        return false
    end

    local Status = TAFSERVICE.c1(Pet.Name)
    if not Status then
        print("[Trade] Could not equip pet:", Pet and Pet.Name or "nil")
        return false
    end

    if TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetHRP = TargetPlayer.Character.HumanoidRootPart
        TAFSERVICE.c(targetHRP.Position)
        wait(0.1)

        local myHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if myHRP and (myHRP.Position - targetHRP.Position).Magnitude < 10 then
            local ok = pcall(function()
                local pp1 = targetHRP:FindFirstChildOfClass("ProximityPrompt")
                if pp1 then fireproximityprompt(pp1) end
                wait(0.3)
                local head = TargetPlayer.Character:FindFirstChild("Head")
                if head then
                    local pp2 = head:FindFirstChildOfClass("ProximityPrompt")
                    if pp2 then fireproximityprompt(pp2) end
                end
            end)
            if ok then
                print("[Trade] Prompt fired for target:", TargetPlayer.Name)
                return true
            else
                print("[Trade] Failed to fire prompts for:", TargetPlayer.Name)
                return false
            end
        else
            print("[Trade] Target too far or HRP missing.")
            return false
        end
    else
        print("[Trade] Target has no character/HRP.")
        return false
    end
end

function TAFSERVICE.RunService()
    while true do
        local status = TAFSERVICE.d()
        if status then
            print("[Trade] Attempt completed.")
        end
        wait(1)
    end
end

TAFSERVICE.RunService()
