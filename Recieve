if not getgenv().Config then
getgenv().Config = {
    SelectUserNameTradePet = "nKmkwjf9x8", -- Tên Người Dùng Cần Giao Dịch Pet
}
end
PetsToTrade = getgenv().PetsToTrade
if not PetsToTrade then
   PetsToTrade = {"
Cockatrice",
}
end

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local TAFSERVICE = {}

local function unequipCurrentTool()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hum = char:FindFirstChildOfClass("Humanoid")
    if hum then
        hum:UnequipTools()  -- moves equipped tool back to Backpack
    end
end

function TAFSERVICE.a()
    local UserName = getgenv().Config.SelectUserNameTradePet
    if UserName == "" then
        return false
    end
    local TargetPlayer = Players:FindFirstChild(UserName)
    if not TargetPlayer then
        return false
    end
    return true
end

function TAFSERVICE.b()
    unequipCurrentTool()
    local Backpack = LocalPlayer.Backpack
    for _, PetName in ipairs(PetsToTrade) do
        for i,v in pairs(Backpack:GetChildren()) do
            if v:IsA("Tool") and v.Name:find(PetName) then
                return v
            end
        end
    end
    return false
end

function TAFSERVICE.c(pos)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
end

function TAFSERVICE.c1(pet)
    if not (LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")) then
        return false
    end
    local Humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if not Humanoid then
        return false
    end
    local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
    if tool and not tool.Name:find(tostring(pet)) then
        Humanoid:UnequipTools()
        wait(.1)
    end
	local Backpack = LocalPlayer.Backpack
	local PetTool = Backpack:FindFirstChild(tostring(pet))
    if Humanoid and PetTool then
	if PetTool:GetAttribute('d') == true then	
		local args = {
	PetTool
}
game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("Favorite_Item"):FireServer(unpack(args))
	end
        Humanoid:EquipTool(PetTool)
        wait(.1)
		return true
    end
end

function TAFSERVICE.d()
    local Pet,UserTrade = TAFSERVICE.b(),TAFSERVICE.a()
    if not (UserTrade and Pet) then
        print("Please set a username and have a pet to trade")
    end
    local Status = TAFSERVICE.c1(Pet.Name)
    if not Status then
        print("Could not equip pet")
    end
    local TargetPlayer = Players:FindFirstChild(getgenv().Config.SelectUserNameTradePet)
    if not TargetPlayer then
        print("Can't find player")
    end
    if TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        TAFSERVICE.c(TargetPlayer.Character.HumanoidRootPart.Position)
        wait(.1)
        if TargetPlayer.Character.HumanoidRootPart:FindFirstChildOfClass("ProximityPrompt") 
            and (LocalPlayer.Character.HumanoidRootPart.Position - TargetPlayer.Character.HumanoidRootPart.Position).Magnitude < 10 then
            pcall(function()
            fireproximityprompt(TargetPlayer.Character.HumanoidRootPart:FindFirstChildOfClass("ProximityPrompt"))
            wait(0.3)
            fireproximityprompt(TargetPlayer.Character.Head:FindFirstChildOfClass("ProximityPrompt"))
            end)
			return true
        end
    end
    return true
end

function TAFSERVICE.RunService()
    while true do
        local status = TAFSERVICE.d()
        if status then
            print(status)
        end
        wait(1)
    end
end

TAFSERVICE.RunService()
